//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NewsFeed.NewsFeedService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NewsFeedService.INewsFeedService")]
    public interface INewsFeedService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsFeedService/GetNews", ReplyAction="http://tempuri.org/INewsFeedService/GetNewsResponse")]
        string GetNews();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INewsFeedService/GetNews", ReplyAction="http://tempuri.org/INewsFeedService/GetNewsResponse")]
        System.Threading.Tasks.Task<string> GetNewsAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INewsFeedServiceChannel : NewsFeed.NewsFeedService.INewsFeedService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NewsFeedServiceClient : System.ServiceModel.ClientBase<NewsFeed.NewsFeedService.INewsFeedService>, NewsFeed.NewsFeedService.INewsFeedService {
        
        public NewsFeedServiceClient() {
        }
        
        public NewsFeedServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NewsFeedServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsFeedServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NewsFeedServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetNews() {
            return base.Channel.GetNews();
        }
        
        public System.Threading.Tasks.Task<string> GetNewsAsync() {
            return base.Channel.GetNewsAsync();
        }
    }
}
